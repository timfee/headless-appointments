{"version":3,"sources":["../../src/client/index.tsx","../../src/shared/index.ts"],"sourcesContent":["import { utcToZonedTime } from \"date-fns-tz\"\nimport {\n  createContext,\n  Dispatch,\n  PropsWithChildren,\n  useContext,\n  useReducer,\n} from \"react\"\n\nimport {\n  DateAsStringInterval,\n  DateInterval,\n  mapStringsToDates,\n} from \"../shared\"\n\nexport type State = {\n  timeZone: string\n  date: Date\n  dialog: boolean\n  duration: number\n  availability: DateInterval[]\n}\n\ntype Action =\n  | {\n      type: \"set_date\"\n      payload: Date\n    }\n  | {\n      type: \"set_timezone\"\n      payload: string\n    }\n  | { type: \"set_dialog\"; payload: boolean }\n  | { type: \"set_duration\"; payload: number }\n\nconst INITIAL_STATE: State = {\n  timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n  date: new Date(),\n  availability: [],\n  dialog: false,\n  duration: 30,\n}\n\nconst AvailabilityContext = createContext<{\n  state: State\n  dispatch: Dispatch<Action>\n}>({\n  dispatch: () => null,\n  state: INITIAL_STATE,\n})\n\nexport function AvailabilityProvider({\n  children,\n  data,\n}: PropsWithChildren<{\n  data: DateAsStringInterval[]\n}>) {\n  const dataAsDates = mapStringsToDates(data)\n  const [state, dispatch] = useReducer(reducer, {\n    ...INITIAL_STATE,\n    availability: dataAsDates,\n  })\n\n  function reducer(state: State, action: Action): State {\n    switch (action.type) {\n      case \"set_date\":\n        return {\n          ...state,\n          date: action.payload,\n        }\n\n      case \"set_timezone\":\n        return {\n          ...state,\n          timeZone: action.payload,\n        }\n\n      case \"set_dialog\": {\n        return {\n          ...state,\n          dialog: action.payload,\n        }\n      }\n\n      case \"set_duration\": {\n        return {\n          ...state,\n          duration: action.payload,\n        }\n      }\n\n      default:\n        return state\n    }\n  }\n\n  return (\n    <AvailabilityContext.Provider value={{ dispatch, state }}>\n      {children}\n    </AvailabilityContext.Provider>\n  )\n}\n\nexport function useAvailabilityContext() {\n  if (!useContext(AvailabilityContext))\n    throw new Error(\n      \"AvailabilityContext is not defined. Did you forget to wrap your component in AvailabilityProvider?\"\n    )\n  return useContext(AvailabilityContext)\n}\n\nfunction groupAvailabilityByDay(\n  availability: DateInterval[],\n  timeZone: string\n) {\n  const returnValue = availability.reduce((acc, cur) => {\n    const date = utcToZonedTime(cur.start, timeZone)\n    const key = date.toDateString()\n    if (!acc[key]) acc[key] = []\n    acc[key].push(cur)\n    return acc\n  }, {} as Record<string, typeof availability>)\n\n  return returnValue\n}\n","export type DateInterval = {\n  start: Date\n  end: Date\n}\n\nexport type DateAsStringInterval = {\n  start: string\n  end: string\n}\n\nexport function mapStringsToDates(\n  slots: DateAsStringInterval[]\n): DateInterval[] {\n  return slots.map(({ start, end }) => ({\n    start: new Date(start),\n    end: new Date(end),\n  }))\n}\n\nexport function mapDatesToStrings(\n  slots: DateInterval[]\n): DateAsStringInterval[] {\n  return slots.map(({ start, end }) => ({\n    start: start.toISOString(),\n    end: end.toISOString(),\n  }))\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,sBAAsB;AAC/B;AAAA,EACE;AAAA,EAGA;AAAA,EACA;AAAA,OACK;;;ACGA,SAAS,kBACd,OACgB;AAChB,SAAO,MAAM,IAAI,CAAC,EAAE,OAAO,IAAI,OAAO;AAAA,IACpC,OAAO,IAAI,KAAK,KAAK;AAAA,IACrB,KAAK,IAAI,KAAK,GAAG;AAAA,EACnB,EAAE;AACJ;;;ADgFI;AA9DJ,IAAM,gBAAuB;AAAA,EAC3B,UAAU,KAAK,eAAe,EAAE,gBAAgB,EAAE;AAAA,EAClD,MAAM,oBAAI,KAAK;AAAA,EACf,cAAc,CAAC;AAAA,EACf,QAAQ;AAAA,EACR,UAAU;AACZ;AAEA,IAAM,sBAAsB,cAGzB;AAAA,EACD,UAAU,MAAM;AAAA,EAChB,OAAO;AACT,CAAC;AAEM,SAAS,qBAAqB;AAAA,EACnC;AAAA,EACA;AACF,GAEI;AACF,QAAM,cAAc,kBAAkB,IAAI;AAC1C,QAAM,CAAC,OAAO,QAAQ,IAAI,WAAW,SAAS,iCACzC,gBADyC;AAAA,IAE5C,cAAc;AAAA,EAChB,EAAC;AAED,WAAS,QAAQA,QAAc,QAAuB;AACpD,YAAQ,OAAO,MAAM;AAAA,MACnB,KAAK;AACH,eAAO,iCACFA,SADE;AAAA,UAEL,MAAM,OAAO;AAAA,QACf;AAAA,MAEF,KAAK;AACH,eAAO,iCACFA,SADE;AAAA,UAEL,UAAU,OAAO;AAAA,QACnB;AAAA,MAEF,KAAK,cAAc;AACjB,eAAO,iCACFA,SADE;AAAA,UAEL,QAAQ,OAAO;AAAA,QACjB;AAAA,MACF;AAAA,MAEA,KAAK,gBAAgB;AACnB,eAAO,iCACFA,SADE;AAAA,UAEL,UAAU,OAAO;AAAA,QACnB;AAAA,MACF;AAAA,MAEA;AACE,eAAOA;AAAA,IACX;AAAA,EACF;AAEA,SACE,oBAAC,oBAAoB,UAApB,EAA6B,OAAO,EAAE,UAAU,MAAM,GACpD,UACH;AAEJ;AAEO,SAAS,yBAAyB;AACvC,MAAI,CAAC,WAAW,mBAAmB;AACjC,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AACF,SAAO,WAAW,mBAAmB;AACvC;","names":["state"]}